apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: mysqlinstance.aws.gigapress.catex.se
  labels:
    crossplane.io/xrd: mysqlinstances.gigapress.catex.se
    provider: aws
    type: db
    tier: enterprise
spec:
  writeConnectionSecretsToNamespace: crossplane-system
  compositeTypeRef:
    apiVersion: gigapress.catex.se/v1alpha1
    kind: XMysqlInstance

  patchSets:
    - name: common
      patches:
        - fromFieldPath: "spec.region"
          toFieldPath: "spec.forProvider.region"
        - fromFieldPath: "spec.deletionPolicy"
          toFieldPath: "spec.deletionPolicy"

  resources:
    # DB :: Subnet Group
    - name: dbsubnetgroup
      base:
        apiVersion: database.aws.crossplane.io/v1beta1
        kind: DBSubnetGroup
        spec:
          forProvider:
            subnetIdSelector:
              matchLabels:
                type: subnet
                visibility: private
      patches:
        - type: PatchSet
          patchSetName: common
        - fromFieldPath: "spec.orgRefName"
          toFieldPath: "spec.forProvider.subnetIdSelector.matchLabels[ref.crossplane.io/org-name]"

    # DB :: Mysql Instance
    - name: rds
      base:
        apiVersion: database.aws.crossplane.io/v1beta1
        kind: RDSInstance
        spec:
          forProvider:
            dbSubnetGroupNameSelector:
              matchControllerRef: true
            dbInstanceClass: db.t3.small
            engine: mariadb
            engineVersion: "10.4"
            masterUsername: master
            skipFinalSnapshotBeforeDeletion: true
            publicAccessible: false
            vpcSecurityGroupIDSelector:
              matchLabels:
                visibility: private
      patches:
        - type: PatchSet
          patchSetName: common
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: spec.orgRefName
              - fromFieldPath: spec.name
            strategy: string
            string:
              fmt: "org-%s-%s"
          toFieldPath: spec.writeConnectionSecretToRef.name
          policy:
            fromFieldPath: Required
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: spec.orgRefName
              - fromFieldPath: spec.name
            strategy: string
            string:
              fmt: "org-%s-%s"
          toFieldPath: metadata.name
          policy:
            fromFieldPath: Required
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: spec.orgRefName
              - fromFieldPath: spec.name
            strategy: string
            string:
              fmt: "org-%s-%s"
          toFieldPath: spec.forProvider.dbParameterGroupName
        - fromFieldPath: spec.storageGB
          toFieldPath: spec.forProvider.allocatedStorage
        - fromFieldPath: spec.instanceClass
          toFieldPath: spec.forProvider.dbInstanceClass
        - fromFieldPath: spec.orgRefName
          toFieldPath: spec.forProvider.vpcSecurityGroupIDSelector.matchLabels[ref.crossplane.io/org-name]
      # connectionDetails:
      #   - fromConnectionSecretKey: username
      #   - fromConnectionSecretKey: password
      #   - fromConnectionSecretKey: endpoint
      #   - fromConnectionSecretKey: port
