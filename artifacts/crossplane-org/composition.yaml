apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: org-standard.aws.gigapress.catex.se
  labels:
    crossplane.io/xrd: xorgs.gigapress.catex.se
    provider: aws
    vpc: new
    tier: standard
spec:
  writeConnectionSecretsToNamespace: crossplane-system
  compositeTypeRef:
    apiVersion: gigapress.catex.se/v1alpha1
    kind: XOrg

  patchSets:
    - name: common
      patches:
        - fromFieldPath: spec.region
          toFieldPath: spec.forProvider.region
        - fromFieldPath: spec.deletionPolicy
          toFieldPath: spec.deletionPolicy
        - fromFieldPath: spec.name
          toFieldPath: metadata.labels[vpc]

  # -----------------
  # RM includes
  # -----------------
  # - VPC
  # - EKS
  # - EKS OIDC
  # - HelmProvider: ALB Ingress Controller

  resources:

    #-----------------
    # VPC
    #-----------------
    # - 1 vpc
    # - 2 public subnet
    # - 2 private subnet
    # - 1 routetable for public subnet
    # - 2 routetable for private subnet
    # - 1 internet gateway
    # - 1 nat gateway
    # - 1 elastic ip
    #----------------
    - name: vpc
      base:
        apiVersion: ec2.aws.crossplane.io/v1beta1
        kind: VPC
        spec:
          forProvider:
            enableDnsSupport: true
            enableDnsHostNames: true
            tags:
              - key: Name
      patches:
        - type: PatchSet
          patchSetName: common
        - fromFieldPath: spec.vpc.cidrBlock
          toFieldPath: spec.forProvider.cidrBlock
        - fromFieldPath: spec.name
          toFieldPath: spec.forProvider.tags[0].value

    - name: igw
      base:
        apiVersion: ec2.aws.crossplane.io/v1beta1
        kind: InternetGateway
        metadata:
          labels:
            type: igw
        spec:
          forProvider:
            vpcIdSelector:
              matchControllerRef: true
            tags:
              - key: Name
      patches:
        - type: PatchSet
          patchSetName: common
        - fromFieldPath: spec.name
          toFieldPath: spec.forProvider.tags[0].value
          transforms:
          - type: string
            string:
              fmt: "igw-%s"

    - name: subnet-public-1
      base:
        apiVersion: ec2.aws.crossplane.io/v1beta1
        kind: Subnet
        metadata:
          labels:
            type: subnet
            visibility: public
        spec:
          forProvider:
            mapPublicIpOnLaunch: true
            vpcIdSelector:
              matchControllerRef: true
            tags:
              - key: Name
              - key: kubernetes.io/role/elb
                value: "1"
      patches:
        - type: PatchSet
          patchSetName: common
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: spec.name
              - fromFieldPath: spec.vpc.subnet-public-1.name
            strategy: string
            string:
              fmt: "%s-%s"
          toFieldPath: spec.forProvider.tags[0].value
          policy:
            fromFieldPath: Required
        - fromFieldPath: spec.vpc.subnet-public-1.cidrBlock
          toFieldPath: spec.forProvider.cidrBlock
        - fromFieldPath: spec.vpc.subnet-public-1.az
          toFieldPath: spec.forProvider.availabilityZone
        - fromFieldPath: spec.vpc.subnet-public-1.az
          toFieldPath: metadata.labels.zone

    - name: subnet-public-2
      base:
        apiVersion: ec2.aws.crossplane.io/v1beta1
        kind: Subnet
        metadata:
          labels:
            type: subnet
            visibility: public
        spec:
          forProvider:
            mapPublicIpOnLaunch: true
            vpcIdSelector:
              matchControllerRef: true
            tags:
              - key: Name
              - key: kubernetes.io/role/elb
                value: "1"
      patches:
        - type: PatchSet
          patchSetName: common
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: spec.name
              - fromFieldPath: spec.vpc.subnet-public-2.name
            strategy: string
            string:
              fmt: "%s-%s"
          toFieldPath: spec.forProvider.tags[0].value
          policy:
            fromFieldPath: Required
        - fromFieldPath: spec.vpc.subnet-public-2.cidrBlock
          toFieldPath: spec.forProvider.cidrBlock
        - fromFieldPath: spec.vpc.subnet-public-2.az
          toFieldPath: spec.forProvider.availabilityZone
        - fromFieldPath: spec.vpc.subnet-public-2.az
          toFieldPath: metadata.labels.zone

    - name: subnet-private-1
      base:
        apiVersion: ec2.aws.crossplane.io/v1beta1
        kind: Subnet
        metadata:
          labels:
            type: subnet
            visibility: private
        spec:
          forProvider:
            mapPublicIpOnLaunch: false
            vpcIdSelector:
              matchControllerRef: true
            tags:
              - key: Name
              - key: kubernetes.io/role/internal-elb
                value: "1"
      patches:
        - type: PatchSet
          patchSetName: common
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: spec.name
              - fromFieldPath: spec.vpc.subnet-private-1.name
            strategy: string
            string:
              fmt: "%s-%s"
          toFieldPath: spec.forProvider.tags[0].value
          policy:
            fromFieldPath: Required
        - fromFieldPath: spec.vpc.subnet-private-1.cidrBlock
          toFieldPath: spec.forProvider.cidrBlock
        - fromFieldPath: spec.vpc.subnet-private-1.az
          toFieldPath: spec.forProvider.availabilityZone
        - fromFieldPath: spec.vpc.subnet-private-1.az
          toFieldPath: metadata.labels.zone

    - name: subnet-private-2
      base:
        apiVersion: ec2.aws.crossplane.io/v1beta1
        kind: Subnet
        metadata:
          labels:
            type: subnet
            visibility: private
        spec:
          forProvider:
            mapPublicIpOnLaunch: false
            vpcIdSelector:
              matchControllerRef: true
            tags:
              - key: Name
              - key: kubernetes.io/role/internal-elb
                value: "1"
      patches:
        - type: PatchSet
          patchSetName: common
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: spec.name
              - fromFieldPath: spec.vpc.subnet-private-2.name
            strategy: string
            string:
              fmt: "%s-%s"
          toFieldPath: spec.forProvider.tags[0].value
          policy:
            fromFieldPath: Required
        - fromFieldPath: spec.vpc.subnet-private-2.cidrBlock
          toFieldPath: spec.forProvider.cidrBlock
        - fromFieldPath: spec.vpc.subnet-private-2.az
          toFieldPath: spec.forProvider.availabilityZone
        - fromFieldPath: spec.vpc.subnet-private-2.az
          toFieldPath: metadata.labels.zone

    - name: elastic-ip
      base:
        apiVersion: ec2.aws.crossplane.io/v1beta1
        kind: Address
        metadata:
          labels:
            type: eip
        spec:
          forProvider:
            domain: vpc
      patches:
        - type: PatchSet
          patchSetName: common

    - name: natgateway
      base:
        apiVersion: ec2.aws.crossplane.io/v1beta1
        kind: NATGateway
        metadata:
          labels:
            type: natgw
        spec:
          forProvider:
            allocationIdSelector:
              matchControllerRef: true
              matchLabels:
                type: eip
            vpcIdSelector:
              matchControllerRef: true
            subnetIdSelector:
              matchControllerRef: true
              matchLabels:
                type: subnet
                visibility: public
            tags:
              - key: Name
      patches:
        - type: PatchSet
          patchSetName: common
        - fromFieldPath: spec.name
          toFieldPath: spec.forProvider.tags[0].value
          transforms:
            - type: string
              string:
                fmt: "natgw-%s"
        - fromFieldPath: spec.vpc.subnet-public-1.az
          toFieldPath: spec.forProvider.subnetIdSelector.matchLabels.zone

    - name: routetable-public
      base:
        apiVersion: ec2.aws.crossplane.io/v1beta1
        kind: RouteTable
        spec:
          forProvider:
            vpcIdSelector:
              matchControllerRef: true
            routes:
              - destinationCidrBlock: 0.0.0.0/0
                gatewayIdSelector:
                  matchControllerRef: true
                  matchLabels:
                    type: igw
            associations:
              - subnetIdSelector:
                  matchControllerRef: true
                  matchLabels:
                    type: subnet
                    visibility: public
              - subnetIdSelector:
                  matchControllerRef: true
                  matchLabels:
                    type: subnet
                    visibility: public
            tags:
              - key: Name
      patches:
        - type: PatchSet
          patchSetName: common
        - fromFieldPath: spec.name
          toFieldPath: spec.forProvider.tags[0].value
          transforms:
            - type: string
              string:
                fmt: "%s-pub-routetable"
        - fromFieldPath: spec.vpc.subnet-public-1.az
          toFieldPath: spec.forProvider.associations[0].subnetIdSelector.matchLabels.zone
        - fromFieldPath: spec.vpc.subnet-public-2.az
          toFieldPath: spec.forProvider.associations[1].subnetIdSelector.matchLabels.zone

    - name: routetable-private-1
      base:
        apiVersion: ec2.aws.crossplane.io/v1beta1
        kind: RouteTable
        spec:
          forProvider:
            vpcIdSelector:
              matchControllerRef: true
            routes:
              - destinationCidrBlock: 0.0.0.0/0
                natGatewayIdSelector:
                  matchControllerRef: true
                  matchLabels:
                    type: natgw
            associations:
              - subnetIdSelector:
                  matchControllerRef: true
                  matchLabels:
                    type: subnet
                    visibility: private
            tags:
              - key: Name
      patches:
        - type: PatchSet
          patchSetName: common
        - fromFieldPath: spec.name
          toFieldPath: spec.forProvider.tags[0].value
          transforms:
            - type: string
              string:
                fmt: "%s-private-routetable-1"
        - fromFieldPath: spec.vpc.subnet-private-1.az
          toFieldPath: spec.forProvider.associations[0].subnetIdSelector.matchLabels.zone

    - name: routetable-private-2
      base:
        apiVersion: ec2.aws.crossplane.io/v1beta1
        kind: RouteTable
        spec:
          forProvider:
            vpcIdSelector:
              matchControllerRef: true
            routes:
              - destinationCidrBlock: 0.0.0.0/0
                natGatewayIdSelector:
                  matchControllerRef: true
                  matchLabels:
                    type: natgw
            associations:
              - subnetIdSelector:
                  matchControllerRef: true
                  matchLabels:
                    type: subnet
                    visibility: private
            tags:
              - key: Name
      patches:
        - type: PatchSet
          patchSetName: common
        - fromFieldPath: spec.name
          toFieldPath: spec.forProvider.tags[0].value
          transforms:
            - type: string
              string:
                fmt: "%s-private-routetable-2"
        - fromFieldPath: spec.vpc.subnet-private-2.az
          toFieldPath: spec.forProvider.associations[0].subnetIdSelector.matchLabels.zone

    #------------------------
    # EKS
    #------------------------
    # - 1 IAM Role for cluster
    # - 1 IAM Role for developer (read only)
    # - 1 EKS cluster
    # - 1 Nodegroup
    #------------------------

    - name: eks-cluster
      base:
        apiVersion: eks.aws.crossplane.io/v1beta1
        kind: Cluster
        spec:
          forProvider:
            resourcesVpcConfig:
              endpointPrivateAccess: false
              endpointPublicAccess: true
              subnetIdSelector:
                matchControllerRef: true
                matchLabels:
                  type: subnet
          writeConnectionSecretToRef:
            namespace: crossplane-system
      patches:
        # Bug: https://github.com/crossplane/crossplane/issues/3139
        # ToCompositeFieldPath & patchSet not work together
        # GROUPING
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.identity.oidc.issuer
          toFieldPath: status.eks.oidc
          policy:
            fromFieldPath: Optional
        - fromFieldPath: spec.region
          toFieldPath: spec.forProvider.region
        - fromFieldPath: spec.deletionPolicy
          toFieldPath: spec.deletionPolicy
        - fromFieldPath: spec.name
          toFieldPath: metadata.labels[vpc]
        # -- end workaround --
        - fromFieldPath: spec.name
          toFieldPath: "metadata.name"
          transforms:
            - type: string
              string:
                fmt: "cluster-%s"
        # DYNAMIC
        - fromFieldPath: spec.eks.k8s-version
          toFieldPath: spec.forProvider.version
        - fromFieldPath: spec.name
          toFieldPath: spec.writeConnectionSecretToRef.name
          transforms:
            - type: string
              string:
                fmt: "cluster-%s"
        - fromFieldPath: spec.eks.cluster-role
          toFieldPath: spec.forProvider.roleArn

    - name: eks-nodegroup
      base:
        apiVersion: eks.aws.crossplane.io/v1alpha1
        kind: NodeGroup
        spec:
          forProvider:
            instanceTypes:
              - m5.large
            scalingConfig:
              minSize: 3
            subnetSelector:
              matchControllerRef: true
              matchLabels:
                type: subnet
                visibility: private
            clusterNameSelector:
              matchControllerRef: true
      patches:
        # GROUPING
        - type: PatchSet
          patchSetName: common
        - fromFieldPath: spec.name
          toFieldPath: "metadata.name"
          transforms:
            - type: string
              string:
                fmt: "ng-%s"
        # DYNAMIC
        - fromFieldPath: spec.eks.workers-size
          toFieldPath: spec.forProvider.scalingConfig.desiredSize
        - fromFieldPath: spec.eks.workers-size
          toFieldPath: spec.forProvider.scalingConfig.maxSize
        - fromFieldPath: spec.eks.workload-type
          toFieldPath: spec.forProvider.amiType
          transforms:
          - type: map
            map:
              gpu: AL2_x86_64_GPU
              non-gpu: AL2_x86_64
        - fromFieldPath: spec.eks.workernode-role
          toFieldPath: spec.forProvider.nodeRole
        - fromFieldPath: spec.eks.workernode-type
          toFieldPath: spec.forProvider.instanceTypes[0]

    - name: eks-oidc
      base:
        apiVersion: iam.aws.crossplane.io/v1beta1
        kind: OpenIDConnectProvider
        spec:
          forProvider:
            clientIDList:
              - sts.amazonaws.com
            thumbprintList:
              - "9e99a48a9960b14926bb7f3b02e22da2b0ab7280"
      patches:
        - fromFieldPath: spec.name
          toFieldPath: "metadata.name"
          transforms:
            - type: string
              string:
                fmt: "oidc-eks-%s"
        - fromFieldPath: status.eks.oidc
          toFieldPath: spec.forProvider.url
          policy:
            fromFieldPath: Required

    # Connect to helm-provider
    - name: helm-provider-config
      base:
        apiVersion: helm.crossplane.io/v1beta1
        kind: ProviderConfig
        spec:
          credentials:
            source: Secret
            secretRef:
              key: kubeconfig
              namespace: crossplane-system
      patches:
        - fromFieldPath: spec.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "helm-%s"
        - fromFieldPath: spec.writeConnectionSecretToRef.namespace
          toFieldPath: spec.credentials.secretRef.namespace
        - fromFieldPath: spec.name
          toFieldPath: spec.credentials.secretRef.name
          transforms:
            - type: string
              string:
                fmt: "cluster-%s"
      readinessChecks:
        - type: None

    # Install ALB Ingress Controller
    - name: alb-ingress-controller
      base:
        apiVersion: helm.crossplane.io/v1beta1
        kind: Release
        spec:
          forProvider:
            chart:
              name: aws-load-balancer-controller
              repository: https://aws.github.io/eks-charts
            namespace: default
            skipCreateNamespace: false
            values:
              serviceAccount:
                create: true
                name: aws-alb-ingress-controller
                # annotations:
                #   eks.amazonaws.com/role-arn: "arn:aws:iam::542535353362:role/alb-ingress-controller"
      patches:
        # GROUPING
        - type: PatchSet
          patchSetName: common
        - fromFieldPath: spec.name
          toFieldPath: spec.providerConfigRef.name
          transforms:
            - type: string
              string:
                fmt: "helm-%s"
        - fromFieldPath: spec.name
          toFieldPath: spec.forProvider.values.clusterName
          transforms:
            - type: string
              string:
                fmt: "cluster-%s"

